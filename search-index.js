var searchIndex = JSON.parse('{\
"rdfox_rs":{"doc":"rdfox-rs","t":"NNDDDDDDEENNDNDDDNDNNNDERHDDDDDDMLMLLALLLMAMMMMAMAMMAMOMLLLLAFLLLLLMALMMMMMMLAMMMMAMMMMMAMLMLMMMAMMAMMMMMAMAMMMMMMAMMALLMLLALLLMMLLMDLLLLLLLLLLLLLLLLDLLLLMLLLLLMMLLLCCCAAADLLMLLLLLLLLMLLMLLLLLDLLMLLLLLMMMLLLDLLMLLMLLLLLLLLLMLLDLLLLLLLLLLLLMMLLLLLLLDLLMLLLLLLLLLLLLLLLLMLLMLMMLLLLLCDLLMLLLLLMLLLLLMMLLLLLLRHFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLNNEENNNNNNNDERLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGDFFFFFDDDFFFFFDEFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFDEEENNNNHNNNNNNNNNNMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMRRDLLLLLLLLLLLMMLLLLDLLLLLMLLLLLLLMLLLLLLLLCADLLLLLLLLLLLLMLLMMLLLLLLDLLLLLLLLLLLLLLFLLMMLLLLLLDDIMLLLLMLLLLLLKLLLLLLMLLMMLMMMLLLLLLLMDLLLLLLLLMMLLLLLLLLLMLLLLLMLL","n":["ALL","ASSERTED","ClassReport","ConnectableDataStore","Cursor","CursorRow","DataStore","DataStoreConnection","DataStoreType","FactDomain","File","FileSequence","GraphConnection","INFERRED","Mime","Namespaces","NamespacesBuilder","Off","OpenedCursor","ParallelNN","ParallelNW","ParallelWW","Parameters","PersistenceMode","RDFOX_DEFAULT_LICENSE_FILE_NAME","RDFOX_HOME","RoleCreds","Server","ServerConnection","Statement","Streamer","Transaction","arity","as_ref","base_iri","borrow","borrow_mut","class_report","clone","clone_into","cmp","committed","connectable_data_store","connection","connection","connection","count","cursor","cursor","data_store","data_store","data_store","data_store_connection","data_store_connection","database_call","default_role_creds","eq","eq","equivalent","essence_str","exception","find_license","fmt","fmt","from","from_str","get_param","graph","graph_connection","hash","inner","inner","inner","inner","inner","instant","into","license","map","mime_type","multiplicity","name","namespaces","namespaces","number","number","ontology_graph","opened","parameters","parameters","params","params","partial_cmp","password","plus","prefixes","rdfox_api","release_on_return_to_pool","remaining_buffer","role_creds","role_creds","role_name","rowid","running","self_p","server","server","server_connection","server_connection","server_connection","slash","source","started_at","started_at","statement","statement","statement","streamer","subtype","suffix","text","to_owned","to_string","transaction","try_from","try_into","try_to_string","tx","tx_type","type_","type_id","writer","ClassReport","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","number_of_individuals","number_of_individuals_in_graph","to_owned","to_string","try_from","try_into","try_to_string","type_id","ConnectableDataStore","borrow","borrow_mut","build_pool","connect","data_store","from","has_broken","into","is_valid","new","release_on_return_to_pool","server_connection","try_from","try_into","type_id","Cursor","CursorRow","OpenedCursor","cursor","cursor_row","opened_cursor","Cursor","borrow","borrow_mut","connection","consume","count","create","drop","execute_and_rollback","execute_and_rollback_in_transaction","fmt","from","inner","into","sparql_string","statement","try_from","try_into","type_id","update_and_commit","update_and_commit_in_transaction","CursorRow","borrow","borrow_mut","count","fmt","from","into","lexical_value","lexical_value_with_id","multiplicity","opened","rowid","try_from","try_into","type_id","OpenedCursor","advance","arity","arity","borrow","borrow_mut","cursor","execute_and_rollback","fmt","from","get_answer_variable_name","into","new","open","try_from","try_into","tx","type_id","update_and_commit","DataStore","borrow","borrow_mut","clone","clone_into","create","declare_with_parameters","eq","equivalent","fmt","fmt","from","into","name","parameters","pool_for","to_owned","to_string","try_from","try_into","try_to_string","type_id","DataStoreConnection","borrow","borrow_mut","data_store","drop","evaluate_to_stream","evaluate_update","fmt","fmt","from","get_id","get_number","get_ontologies_count","get_predicates_count","get_subjects_count","get_triples_count","get_unique_id","import_axioms_from_triples","import_data_from_file","import_rdf_from_directory","inner","into","new","number","same","server_connection","started_at","to_string","try_from","try_into","try_to_string","type_id","CException","GraphConnection","borrow","borrow_mut","data_store_connection","drop","fmt","fmt","from","get_triples_count","graph","import_axioms","import_data_from_file","import_rdf_from_directory","into","new","ontology_graph","started_at","to_string","try_from","try_into","try_to_string","type_id","with_data_store_connection","RDFOX_DEFAULT_LICENSE_FILE_NAME","RDFOX_HOME","find_license","Namespaces","NamespacesBuilder","add_class","add_namespace","add_predicate","borrow","borrow","borrow_mut","borrow_mut","build","builder","c_mut_ptr","c_ptr","declare","declare","declare_namespace","declare_with_name_and_iri","default","default_builder","default_namespaces","drop","empty","eq","equivalent","fmt","fmt","for_each_namespace_do","from","from","inner","into","into","map","namespaces","to_string","try_from","try_from","try_into","try_into","try_to_string","type_id","type_id","ALL","ASSERTED","DataStoreType","FactDomain","File","FileSequence","INFERRED","Off","ParallelNN","ParallelNW","ParallelWW","Parameters","PersistenceMode","SENSITIVE_PARAMETERS","api_log","api_log_directory","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data_store_type","drop","empty","eq","equivalent","fact_domain","fmt","fmt","fmt","from","from","from","from","get_string","import_rename_user_blank_nodes","inner","into","into","into","into","license_content","license_file","persist_datastore","persist_roles","server_directory","set_license","set_string","switch_off_file_access_sandboxing","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_to_string","try_to_string","type_id","type_id","type_id","type_id","CCursor","CCursor_advance","CCursor_appendResourceLexicalForm","CCursor_appendResourceTurtleLiteral","CCursor_canAdvance","CCursor_destroy","CCursor_getAnswerVariableName","CCursor_getArity","CCursor_getCurrentMultiplicity","CCursor_getCurrentOffset","CCursor_getDataStoreConnection","CCursor_getDatatypeID","CCursor_isAskQuery","CCursor_open","CCursor_produceQueryAnswers","CCursor_produceQueryAnswersToBuffer","CCursor_produceQueryAnswersToFile","CCursor_stop","CDataStoreConnection","CDataStoreConnection_beginTransaction","CDataStoreConnection_clear","CDataStoreConnection_clearCommitProcedure","CDataStoreConnection_clearRulesAxiomsExplicateFacts","CDataStoreConnection_commitTransaction","CDataStoreConnection_compact","CDataStoreConnection_createCursor","CDataStoreConnection_destroy","CDataStoreConnection_duplicate","CDataStoreConnection_evaluateQuery","CDataStoreConnection_evaluateQueryToBuffer","CDataStoreConnection_evaluateQueryToFile","CDataStoreConnection_evaluateStatement","CDataStoreConnection_evaluateStatementToBuffer","CDataStoreConnection_evaluateStatementToFile","CDataStoreConnection_evaluateUpdate","CDataStoreConnection_exportData","CDataStoreConnection_exportDataToBuffer","CDataStoreConnection_exportDataToFile","CDataStoreConnection_getBaseIRI","CDataStoreConnection_getDataStoreVersion","CDataStoreConnection_getDataStoreVersionAfterLastOperation","CDataStoreConnection_getName","CDataStoreConnection_getNextOperationMustMatchDataStoreVersion","CDataStoreConnection_getNextOperationMustNotMatchDataStoreVersion","CDataStoreConnection_getPrefixes","CDataStoreConnection_getTransactionState","CDataStoreConnection_getUniqueID","CDataStoreConnection_importAxiomsFromTriples","CDataStoreConnection_importData","CDataStoreConnection_importDataFromBuffer","CDataStoreConnection_importDataFromFile","CDataStoreConnection_importDataFromURI","CDataStoreConnection_interrupt","CDataStoreConnection_newDataStoreConnection","CDataStoreConnection_rollbackTransaction","CDataStoreConnection_setBaseIRI","CDataStoreConnection_setCommitProcedure","CDataStoreConnection_setNextOperationMustMatchDataStoreVersion","CDataStoreConnection_setNextOperationMustNotMatchDataStoreVersion","CDataStoreConnection_setPrefix","CDataStoreConnection_setPrefixes","CDataStoreConnection_transactionRequiresRollback","CDataStoreConnection_unsetPrefix","CDatatypeID","CException","CException_destroy","CException_duplicate","CException_getExceptionName","CException_isRDFoxException","CException_what","CInputStream","COutputStream","CParameters","CParameters_destroy","CParameters_getEmptyParameters","CParameters_getString","CParameters_newEmptyParameters","CParameters_setString","CPrefixes","CPrefixes_DeclareResult","CPrefixes_declarePrefix","CPrefixes_declareStandardPrefixes","CPrefixes_destroy","CPrefixes_getDefaultPrefixes","CPrefixes_getEmptyPrefixes","CPrefixes_getPrefix","CPrefixes_newDefaultPrefixes","CPrefixes_newEmptyPrefixes","CPrefixes_undeclarePrefix","CRDFoxException_getCause","CRDFoxException_getMessage","CRDFoxException_getNumberOfCauses","CServerConnection","CServerConnection_createDataStore","CServerConnection_deleteDataStore","CServerConnection_destroy","CServerConnection_duplicate","CServerConnection_getGitSHA","CServerConnection_getMemoryUse","CServerConnection_getNumberOfThreads","CServerConnection_getVersion","CServerConnection_interrupt","CServerConnection_newDataStoreConnection","CServerConnection_newServerConnection","CServerConnection_setMaxMemoryUse","CServerConnection_setNumberOfThreads","CServer_createFirstLocalServerRole","CServer_getNumberOfLocalServerRoles","CServer_startLocalServer","CServer_stopLocalServer","CStatementResult","CTransactionState","CTransactionType","CUpdateType","PREFIXES_DECLARED_NEW","PREFIXES_INVALID_PREFIX_NAME","PREFIXES_NO_CHANGE","PREFIXES_REPLACED_EXISTING","RDFOX_STDOUT","TRANSACTION_STATE_EXCLUSIVE","TRANSACTION_STATE_NONE","TRANSACTION_STATE_READ_ONLY","TRANSACTION_STATE_READ_WRITE","TRANSACTION_TYPE_EXCLUSIVE","TRANSACTION_TYPE_READ_ONLY","TRANSACTION_TYPE_READ_WRITE","UPDATE_TYPE_ADDITION","UPDATE_TYPE_ADDITION_UPDATE_PREFIXES","UPDATE_TYPE_DELETION","__dummy","__dummy","__dummy","__dummy","__dummy","__dummy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_t","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","flushFn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","handle","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","name","numberOfAttemptedDeletions","numberOfAttemptedInsertions","numberOfDeletions","numberOfInsertions","numberOfQueryAnswers","readFn","rewindFn","statementTypeSupportsDeletions","statementTypeSupportsInsertions","statementTypeSupportsUserQuery","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","totalNumberOfQueryAnswers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_string","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","what","writeFn","RDFOX_DEFAULT_ROLE_PASSWD","RDFOX_DEFAULT_ROLE_USERID","RoleCreds","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","into","new","password","role_name","to_owned","try_from","try_into","type_id","Server","borrow","borrow_mut","connection","connection_with_default_role","create_role","default_role_creds","drop","fmt","fmt","from","get_number_of_local_server_roles","into","is_running","running","start","start_with_parameters","stop","to_string","try_from","try_into","try_to_string","type_id","ServerConnection","connection","ServerConnection","borrow","borrow_mut","connect_to_data_store","create_data_store","delete_data_store","drop","fmt","fmt","from","get_memory_use","get_number_of_threads","get_version","inner","into","new","role_creds","server","set_number_of_threads","to_string","try_from","try_into","try_to_string","type_id","Statement","as_c_string","as_str","borrow","borrow_mut","clone","clone_into","cursor","eq","equivalent","fmt","fmt","from","into","new","no_comments","no_comments","nquads_query","prefixes","text","to_owned","to_string","try_from","try_into","try_to_string","type_id","RefToSelf","Streamer","StreamerWithCallbacks","base_iri","borrow","borrow","borrow_mut","borrow_mut","connection","connection_ptr","context_as_ref_to_self","drop","drop","eq","evaluate","flush","flush","flush_function","fmt","fmt","from","from","instant","into","into","mime_type","remaining_buffer","run","self_p","statement","streamer","try_from","try_from","try_into","try_into","type_id","type_id","write_function","writer","Transaction","_rollback","begin","begin_read_only","begin_read_write","begin_read_write_do","borrow","borrow_mut","commit","committed","connection","drop","execute_and_rollback","fmt","fmt","from","get_number","get_title","get_title_for","into","number","rollback","to_string","try_from","try_into","try_to_string","tx_type","type_id","update_and_commit"],"q":[[0,"rdfox_rs"],[132,"rdfox_rs::class_report"],[149,"rdfox_rs::connectable_data_store"],[165,"rdfox_rs::cursor"],[171,"rdfox_rs::cursor::cursor"],[192,"rdfox_rs::cursor::cursor_row"],[207,"rdfox_rs::cursor::opened_cursor"],[226,"rdfox_rs::data_store"],[248,"rdfox_rs::data_store_connection"],[280,"rdfox_rs::exception"],[281,"rdfox_rs::graph_connection"],[304,"rdfox_rs::license"],[307,"rdfox_rs::namespaces"],[349,"rdfox_rs::parameters"],[420,"rdfox_rs::rdfox_api"],[708,"rdfox_rs::role_creds"],[728,"rdfox_rs::server"],[751,"rdfox_rs::server_connection"],[753,"rdfox_rs::server_connection::connection"],[777,"rdfox_rs::statement"],[803,"rdfox_rs::streamer"],[842,"rdfox_rs::transaction"]],"d":["","","Some simple queries about a <code>Class</code>","A pool-able connectable <code>DataStore</code>","A Cursor handles a query result.","A <code>CursorRow</code> is a row of a <code>Cursor</code>, i.e., a set of bindings …","A <code>DataStore</code> encapsulates a unit of logically related …","A connection to a given <code>DataStore</code>.","","","","","A <code>GraphConnection</code> is a wrapper around a <code>DataStoreConnection</code>…","","A parsed mime or media type.","","","","","","","","","","","","","","A connection to a given <code>Server</code>.","SPARQL Statement","A <code>Streamer</code> is a helper-object that’s created by …","","the arity (i.e., the number of columns) of the answers …","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a <code>&amp;str</code> of the Mime’s “essence”.","","Find the license file in the given directory or in the …","","","Returns the argument unchanged.","","Look up a parameter by name.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns an iterator over the parameters.","","","","","","","Indicates that we want to release all connections on …","","","","","","","","","","","","","","","","","","","","","Get the subtype of this <code>Mime</code>.","Get an optional +suffix for this <code>Mime</code>.","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","","Get the top level media type for this <code>Mime</code>.","","","Some simple queries about a <code>Class</code>","","","","","","TODO: Generate a decent looking set of class metrics","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","A pool-able connectable <code>DataStore</code>","","","Build an <code>r2d2::Pool</code> for the given <code>DataStore</code> and …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","release_on_return_to_pool: Mark connection as “destroy”…","Indicates that we want to release all connections on …","","","","","","","","","","","A Cursor handles a query result.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","A <code>CursorRow</code> is a row of a <code>Cursor</code>, i.e., a set of bindings …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the value in lexical form of a term in the current …","Returns the resource bound to the given index in the …","","","","","","","","TODO: Check why this panics when called after previous …","Returns the arity (i.e., the number of columns) of the …","the arity (i.e., the number of columns) of the answers …","","","","","","Returns the argument unchanged.","Get the variable name used in the executed SPARQL …","Calls <code>U::from(self)</code>.","Open the cursor, get the details like arity and argument …","","","","","","","A <code>DataStore</code> encapsulates a unit of logically related …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","A connection to a given <code>DataStore</code>.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Import RDF data from the given file into the given graph.","Read all RDF files (currently it supports .ttl and .nt …","","Calls <code>U::from(self)</code>.","","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","","A <code>GraphConnection</code> is a wrapper around a <code>DataStoreConnection</code>…","","","","","","","Returns the argument unchanged.","Get the number of triples using the given transaction.","","","","Read all RDF files (currently it supports .ttl and .nt …","Calls <code>U::from(self)</code>.","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","Create a clone with another <code>DataStoreConnection</code>","","","Find the license file in the given directory or in the …","","","","","","","","","","","","","","","","","","","","Return the default namespaces: <code>RDF</code>, <code>RDFS</code>, <code>OWL</code> and <code>XSD</code>","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","","","","","","","","","","","","","","","","If true, all API calls are recorded in a script that the …","Specifies the directory into which API logs will be …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","<code>ToString::to_string</code>, but without panic oneturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","","","A connection to a given <code>Server</code>.","","","","","","","","","Returns the argument unchanged.","","","Return the version number of the underlying database engine","","Calls <code>U::from(self)</code>.","","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","SPARQL Statement","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Return a Statement that can be used to export all data in …","","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","","A <code>Streamer</code> is a helper-object that’s created by …","","","","","","","","","","","","","Evaluate/execute the statement and stream all content to …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A duplicate of <code>rollback()</code> that takes a <code>&amp;mut Transaction</code> …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","<code>ToString::to_string</code>, but without panic on OOM.","","",""],"i":[44,44,0,0,0,0,0,0,0,0,58,58,0,44,0,0,0,58,0,57,57,57,0,0,0,0,0,0,0,0,0,0,37,1,42,1,1,0,1,1,1,20,0,28,42,20,35,0,37,0,24,32,0,23,0,70,1,1,1,1,0,0,1,1,1,1,1,23,0,1,28,32,49,33,27,42,1,0,49,42,35,26,0,53,32,20,23,35,0,26,1,1,1,69,1,34,0,24,42,0,27,69,35,70,42,0,27,0,24,32,1,1,32,23,0,28,42,0,1,1,34,1,1,0,1,1,1,37,20,1,1,42,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,49,49,49,49,53,49,53,53,49,49,49,49,53,49,53,53,53,49,49,49,49,49,49,49,49,49,53,49,49,53,49,53,49,49,53,49,53,49,49,53,44,44,0,0,58,58,44,58,57,57,57,0,0,0,33,33,44,58,57,33,44,58,57,33,33,33,33,33,33,33,33,33,58,33,33,44,58,57,33,33,33,33,44,58,57,33,33,33,33,33,33,33,33,33,33,58,33,44,58,57,33,44,58,57,33,58,33,44,58,57,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,0,61,61,61,61,60,60,60,59,59,59,62,54,63,64,48,38,43,62,54,63,64,48,38,65,66,59,60,61,56,43,62,54,63,64,48,38,65,66,59,60,61,56,0,43,59,60,61,56,43,59,60,61,56,65,66,59,60,61,56,59,60,61,56,65,43,62,62,54,63,64,48,38,65,66,59,60,61,56,43,62,54,63,64,48,38,65,66,59,60,61,56,62,59,60,61,56,43,62,54,63,64,48,38,65,66,59,60,61,56,62,43,43,43,43,43,66,66,43,43,43,43,59,60,61,56,62,43,43,62,54,63,64,48,38,65,66,59,60,61,56,43,62,54,63,64,48,38,65,66,59,60,61,56,62,43,62,54,63,64,48,38,65,66,59,60,61,56,62,65,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,0,0,0,42,75,42,75,42,42,42,42,75,42,75,42,76,42,42,75,42,75,42,42,75,42,42,42,42,42,42,75,75,42,75,42,75,42,42,42,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[]],[[]],0,[1,1],[[]],[[1,1],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],4],[[1,2],4],[[],4],[1,2],0,[[[6,[5]]],[[8,[7]]]],[[1,9],[[8,[10]]]],[[1,9],[[8,[10]]]],[[]],[2,[[8,[1]]]],[[1,[12,[11]]],[[6,[11]]]],0,0,[[1,13]],0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1,14],0,[[1,1],[[6,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,11],[1,[[6,[11]]]],0,[[]],[[],15],0,[[],8],[[],8],[[],[[8,[15,16]]]],0,0,[1,11],[[],17],0,0,[[]],[[]],[18,18],[[]],[[18,9],19],[[18,9],19],[[]],[[]],[[18,[21,[20]]],[[8,[22,7]]]],[[18,[21,[20]],23],[[8,[22,7]]]],[[]],[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],0,[[]],[[]],[24,[[8,[[25,[24]],7]]]],[24,8],0,[[]],[24,4],[[]],[24,8],[[[21,[26]],[21,[27]],4],24],0,0,[[],8],[[],8],[[],17],0,0,0,0,0,0,0,[[]],[[]],0,[[28,[21,[20]],22,29],[[8,[22,[0,[[30,[7]],31]]]]]],[[28,[21,[20]]],[[8,[22,7]]]],[[[21,[32]],33,34],[[8,[28,7]]]],[28],[[28,22,29],[[8,[22,7]]]],[[28,[21,[20]],22,29],[[8,[22,7]]]],[[28,9],19],[[]],0,[[]],[28,2],0,[[],8],[[],8],[[],17],[[28,22,29],[[8,[22,7]]]],[[28,[21,[20]],22,29],[[8,[22,7]]]],0,[[]],[[]],0,[[35,9],19],[[]],[[]],[[35,22],[[8,[[6,[36]],7]]]],[[35,22],[[8,[[6,[36]],7]]]],0,0,0,[[],8],[[],8],[[],17],0,[37,[[8,[22,7]]]],[38,[[8,[22,7]]]],0,[[]],[[]],0,[[37,39],[[8,[7]]]],[[37,9],19],[[]],[[37,22],[[8,[15,7]]]],[[]],[[28,[21,[20]]],[[8,[7]]]],[38,[[8,[22,7]]]],[[],8],[[],8],0,[[],17],[[37,39],[[8,[7]]]],0,[[]],[[]],[26,26],[[]],[[26,[21,[27]]],[[8,[7]]]],[[2,33],[[8,[[21,[26]],7]]]],[[26,26],4],[[],4],[[26,9],19],[[26,9],19],[[]],[[]],0,0,[[[21,[26]],[21,[27]],4,4],[[8,[[25,[24]],7]]]],[[]],[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],0,[[]],[[]],0,[32],[[[21,[32]],40,34,1,[6,[41]]],[[8,[[42,[40]],7]]]],[[32,34,33],[[8,[43,7]]]],[[32,9],19],[[32,9],19],[[]],[32,[[8,[15,7]]]],[[],22],[[[21,[32]],[21,[20]],44],[[8,[22,7]]]],[[[21,[32]],[21,[20]],44],[[8,[22,7]]]],[[[21,[32]],[21,[20]],44],[[8,[22,7]]]],[[[21,[32]],[21,[20]],44],[[8,[22,7]]]],[32,[[8,[15,7]]]],[[32,45,45],[[8,[7]]]],[[32,[46,[5]],45],[[8,[7]]]],[[32,5,45],[[8,[47,7]]]],0,[[]],[[[21,[27]],[21,[26]],48],32],0,[[[21,[32]],[21,[32]]],4],0,0,[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],0,0,[[]],[[]],0,[23],[[23,9],19],[[23,9],19],[[]],[[23,[21,[20]],44],[[8,[22,7]]]],0,[23,[[8,[7]]]],[[23,[46,[5]]],[[8,[7]]]],[[23,5],[[8,[47,7]]]],[[]],[[[21,[32]],45,[6,[45]]],[[21,[23]]]],0,0,[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],[[23,[21,[32]]],[[21,[23]]]],0,0,[[[6,[5]]],[[8,[7]]]],0,0,[[[21,[49]],50],[[8,[[21,[49]],7]]]],[[[21,[49]],51],[[8,[[21,[49]],7]]]],[[[21,[49]],52],[[8,[[21,[49]],7]]]],[[]],[[]],[[]],[[]],[53,[[8,[[21,[49]],7]]]],[[],53],[49,54],[49,54],[[[21,[49]],2,[55,[41]]],[[8,[56,7]]]],[[53,51],53],[[[21,[49]],51],[[8,[56,7]]]],[[53,2,[55,[41]]],53],[[],53],[[],53],[[],[[8,[[21,[49]],7]]]],[49],[[],[[8,[[21,[49]],7]]]],[[49,49],4],[[],4],[[49,9],19],[[49,9],19],[[49,29],8],[[]],[[]],0,[[]],[[]],0,0,[[],15],[[],8],[[],8],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,4],[[8,[33,7]]]],[[33,5],[[8,[33,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[[]],[[33,57],[[8,[33,7]]]],[33],[[],[[8,[33,7]]]],[[33,33],4],[[],4],[[33,44],[[8,[33,7]]]],[[58,9],19],[[33,9],19],[[33,9],19],[[]],[[]],[[]],[[]],[[33,2,2],[[8,[15,7]]]],[[33,4],[[8,[33,7]]]],0,[[]],[[]],[[]],[[]],[[33,2],[[8,[33,7]]]],[[33,5],[[8,[33,7]]]],[[33,58],[[8,[33,7]]]],[[33,58],[[8,[33,7]]]],[[33,5],[[8,[33,7]]]],[[33,[6,[5]]],[[8,[33,7]]]],[[33,2,2],[[8,[7]]]],[33,[[8,[33,7]]]],[[]],[[],15],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[15,16]]]],[[],[[8,[15,16]]]],[[],17],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[43,43],[59,59],[60,60],[61,61],[56,56],[[]],[[]],[[]],[[]],[[]],0,0,[[59,59],4],[[60,60],4],[[61,61],4],[[56,56],4],[[],4],[[],4],[[],4],[[],4],0,[[43,9],19],[[62,9],19],[[62,9],19],[[54,9],19],[[63,9],19],[[64,9],19],[[48,9],19],[[38,9],19],[[65,9],19],[[66,9],19],[[59,9],19],[[60,9],19],[[61,9],19],[[56,9],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,[0,[39,67]]],[[8,[7]]]],[[59,13]],[[60,13]],[[61,13]],[[56,13]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,[[8,[2,68]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],15],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[62,[[8,[2,68]]]],0,0,0,0,[[]],[[]],[69,69],[[]],[[],69],[[69,69],4],[[],4],[[69,9],19],[[]],[[]],[[2,2],69],0,0,[[]],[[],8],[[],8],[[],17],0,[[]],[[]],[[[21,[70]],69],[[8,[[21,[27]],7]]]],[[[21,[70]]],[[8,[[21,[27]],7]]]],[[70,69],[[8,[7]]]],0,[70],[[70,9],19],[[70,9],19],[[]],[70,[[8,[47,7]]]],[[]],[70,4],0,[69,[[8,[[21,[70]],7]]]],[[69,[6,[33]]],[[8,[[21,[70]],7]]]],[70],[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],0,0,0,[[]],[[]],[[[21,[27]],[21,[26]]],[[8,[[21,[32]],7]]]],[[27,26],[[8,[7]]]],[[27,26],[[8,[7]]]],[27],[[27,9],19],[[27,9],19],[[]],[27,[[8,[7]]]],[27,[[8,[71,7]]]],[27,[[8,[15,7]]]],0,[[]],[[69,[21,[70]],64],27],0,0,[[27,22],[[8,[7]]]],[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],0,[34,[[8,[72,7]]]],[34,2],[[]],[[]],[34,34],[[]],[[34,[21,[32]],33],[[8,[28,7]]]],[[34,34],4],[[],4],[[34,9],19],[[34,9],19],[[]],[[]],[[[21,[49]],[73,[2]]],[[8,[34,7]]]],[2,15],[34,15],[[[21,[49]]],[[8,[34,7]]]],0,0,[[]],[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],[[],17],0,0,0,0,[[]],[[]],[[]],[[]],0,[[[42,[40]]],48],[74,[[75,[40]]]],[[[75,[40]]]],[[[42,[40]]]],[[[75,[[0,[12,40]]]],[75,[[0,[12,40]]]]],4],[[[42,[40]]],[[8,[[42,[40]],7]]]],[[],4],[[[42,[40]]],4],[74,4],[[[75,[[0,[31,40]]]],9],19],[[[42,[[0,[31,40]]]],9],19],[[]],[[]],0,[[]],[[]],0,0,[[[21,[32]],40,34,1,51],[[8,[[42,[40]],7]]]],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[74,74,22],4],0,0,[20,[[8,[7]]]],[[[21,[32]],60],[[8,[[21,[20]],7]]]],[[[21,[32]]],[[8,[[21,[20]],7]]]],[[[21,[32]]],[[8,[[21,[20]],7]]]],[[[21,[32]],39],[[8,[7]]]],[[]],[[]],[[[21,[20]]],[[8,[7]]]],0,0,[20],[[[21,[20]],39],[[8,[7]]]],[[20,9],19],[[20,9],19],[[]],[[],22],[20,15],[[60,22,22],15],[[]],0,[[[21,[20]]],[[8,[7]]]],[[],15],[[],8],[[],8],[[],[[8,[15,16]]]],0,[[],17],[[[21,[20]],39],[[8,[[30,[7]]]]]]],"c":[],"p":[[3,"Mime"],[15,"str"],[4,"Ordering"],[15,"bool"],[3,"Path"],[4,"Option"],[4,"RDFStoreError"],[4,"Result"],[3,"Formatter"],[3,"Error"],[3,"Name"],[8,"PartialEq"],[8,"Hasher"],[3,"Params"],[3,"String"],[3,"TryReserveError"],[3,"TypeId"],[3,"ClassReport"],[6,"Result"],[3,"Transaction"],[3,"Arc"],[15,"usize"],[3,"GraphConnection"],[3,"ConnectableDataStore"],[3,"Pool"],[3,"DataStore"],[3,"ServerConnection"],[3,"Cursor"],[8,"FnMut"],[8,"From"],[8,"Debug"],[3,"DataStoreConnection"],[3,"Parameters"],[3,"Statement"],[3,"CursorRow"],[3,"Literal"],[3,"OpenedCursor"],[3,"CCursor"],[8,"FnOnce"],[8,"Write"],[3,"Iri"],[3,"Streamer"],[3,"CStatementResult"],[4,"FactDomain"],[3,"Graph"],[8,"AsRef"],[15,"u16"],[3,"CDataStoreConnection"],[3,"Namespaces"],[3,"Class"],[3,"Namespace"],[3,"Predicate"],[3,"NamespacesBuilder"],[3,"CPrefixes"],[8,"Into"],[4,"CPrefixes_DeclareResult"],[4,"DataStoreType"],[4,"PersistenceMode"],[4,"CUpdateType"],[4,"CTransactionType"],[4,"CTransactionState"],[3,"CException"],[3,"CParameters"],[3,"CServerConnection"],[3,"COutputStream"],[3,"CInputStream"],[8,"UnwindSafe"],[3,"Utf8Error"],[3,"RoleCreds"],[3,"Server"],[15,"u32"],[3,"CString"],[4,"Cow"],[4,"c_void"],[3,"RefToSelf"],[8,"StreamerWithCallbacks"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
